################################################################################
# General
################################################################################

# utf-8 on
set -gq utf8 on        # Tmux < 2.2
set -gq status-utf8 on # Tmux < 2.2

# Allow tmux to set the titlebar
set -g set-titles on

# make the first window number start at 1
set -g base-index 1
setw -g pane-base-index 1

# set shell
set-option -g default-shell /bin/zsh

# Allow mouse control
set -g mouse on

# Enable the mouse for scrolling
set -gq mode-mouse on # Tmux < 2.1
set -gq mouse on      # Tmux >= 2.1
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Enable mouse for selecting and resizing
set -gq mouse-select-window on # Tmux < 2.1
set -gq mouse-select-pane on   # Tmux < 2.1
set -gq mouse-resize-pane on   # Tmux < 2.1

################################################################################
# Key Binding
################################################################################

# -r means that the bind can repeat without entering prefix again
# -n means that the bind doesn't use the prefix

# Ensure prefix is Ctrl+B
# set -g prefix C-Space

# 'PREFIX r' to reload of the config file
unbind r
bind r source-file ~/.tmux.conf\; display-message '~/.tmux.conf reloaded'

# Switch between previous and next windows with repeatable
bind -r n next-window
bind -r p previous-window

# Allow holding Ctrl when using using prefix+p/n for switching windows
bind -r C-p previous-window
bind -r C-n next-window

# Move around panes like in vim
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# # Smart pane switching with awareness of vim splits
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Switch between two most recently used windows
bind Space last-window

# run shell command template
# bind-key -r D run-shell "t ~/.dotfiles"

################################################################################
# Plugins
################################################################################

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# install pluggin <prefix> + I
# update pluggins <prefix> + U
# delete pluggin <prefix> + alt + u

set -g @plugin 'tmux-plugins/tpm'

set -g @dracula-plugins " ram-usage cpu-usage time"
set -g @plugin 'dracula/tmux'
set -g @dracula-show-powerline true
set -g @dracula-show-left-icon 
set -g @dracula-cpu-usage-label 
set -g @dracula-ram-usage-label 

run -b '~/.tmux/plugins/tpm/tpm'








